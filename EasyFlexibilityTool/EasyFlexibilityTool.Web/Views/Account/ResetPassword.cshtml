@model EasyFlexibilityTool.Web.ViewModels.ResetPasswordViewModel
@{
    ViewBag.Title = "Reset password";
}

<section class="well-xs">
    <div class="container relative">
        <h2 class="relative text-center text-md-left wow fadeInLeft" style="visibility: visible; animation-name: fadeInLeft;">
            @ViewBag.Title
            <span class="devider devider-md devider-default devider-position-left devider-position-center-sm devider-position-bottom"></span>
        </h2>

        @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "rd-mailform wow fadeInUp", style = "visibility: visible; animation-name: fadeInUp;" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "")
            @Html.HiddenFor(model => model.Code)

            <fieldset>
                <label data-add-placeholder="" class="mfInput">
                    @Html.EditorFor(m => m.Email, new {htmlAttributes = new {placeholder = Html.DisplayNameFor(m => m.Email)}})
                    @Html.ValidationMessageFor(m => m.Email)
                </label>
                <label data-add-placeholder="" class="mfInput">
                    @Html.EditorFor(m => m.Password, new {htmlAttributes = new {placeholder = Html.DisplayNameFor(m => m.Password)}})
                    @Html.ValidationMessageFor(m => m.Password)
                </label>

                <label data-add-placeholder="" class="mfInput">
                    @Html.EditorFor(m => m.ConfirmPassword, new {htmlAttributes = new {placeholder = Html.DisplayNameFor(m => m.ConfirmPassword)}})
                    @Html.ValidationMessageFor(m => m.ConfirmPassword)
                </label>

                <div class="mfControls">
                    <button class="link link-primary" type="submit">Reset</button>
                </div>
            </fieldset>
        }
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
