@model EasyFlexibilityTool.Web.ViewModels.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password";
}

<section class="well-xs">
    <div class="container relative">
        <h2 class="relative text-center text-md-left wow fadeInLeft" style="visibility: visible; animation-name: fadeInLeft;">
            @ViewBag.Title
            <span class="devider devider-md devider-default devider-position-left devider-position-center-sm devider-position-bottom"></span>
        </h2>

        @using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "rd-mailform wow fadeInUp", style = "visibility: visible; animation-name: fadeInUp;" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "")

            <fieldset>
                <label data-add-placeholder="" class="mfInput">
                    @Html.EditorFor(m => m.OldPassword, new { htmlAttributes = new { placeholder = Html.DisplayNameFor(m => m.OldPassword) } })
                    @Html.ValidationMessageFor(m => m.OldPassword)
                </label>
                <label data-add-placeholder="" class="mfInput">
                    @Html.EditorFor(m => m.NewPassword, new { htmlAttributes = new { placeholder = Html.DisplayNameFor(m => m.NewPassword) } })
                    @Html.ValidationMessageFor(m => m.NewPassword)
                </label>

                <label data-add-placeholder="" class="mfInput">
                    @Html.EditorFor(m => m.ConfirmPassword, new { htmlAttributes = new { placeholder = Html.DisplayNameFor(m => m.ConfirmPassword) } })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword)
                </label>

                <div class="mfControls">
                    <button class="link link-primary" type="submit">Change</button>
                </div>
            </fieldset>
        }
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}